@using Kendo.Mvc.UI
@using ERP.Model.Models
@using ERP.Model.DataTransferObjects
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-left">
                    <li class="breadcrumb-item"><a href="#">Quản lý danh mục</a></li>
                    <li class="breadcrumb-item active">Hệ thống</li>
                </ol>
            </div>
            <div class="col-sm-6">
                <h1 class="float-sm-right">Danh mục @ViewData["Title"]?.ToString()</h1>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="card w-100" style="overflow-x:auto;">
                <div class="card-header">
                    <h3 class="card-title">Danh mục @ViewData["Title"]?.ToString()</h3>
                </div>
                <div class="card-body">
                    @(Html.Kendo().Grid<Category>()
                    .Name("Category")
                    .Columns(columns =>
                    {
                        columns.Bound(t => t.Code).Title("Mã quản lý").Width(150);
                        columns.Bound(t => t.SubCode).Title("Mã phụ").Width(150);
                        columns.Bound(t => t.Name).Title("Tên hiển thị").Width(350);
                        columns.Bound(t => t.Note).Title("Ghi chú").Width(200);
                        columns.Command(command =>
                        {
                            command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "padding-left:14px; padding-top:10px; border-radius: 6px; font-weight:bold;" });
                            command.Destroy().Text("&nbsp;").IconClass("fas fa-trash").HtmlAttributes(new { style = "color:#ffffff; background-color:#dc3545; padding-top:10px; border-radius: 6px; width:50px;", @class = "btn btn-danger" });
                        }).Width(150);
                    })
                    .ClientDetailTemplateId("template")
                    .ToolBar(toolBar => toolBar.Create().Text("&nbsp;").IconClass("fas fa-plus").HtmlAttributes(new { style = "border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
                    .ToolBar(toolBar => toolBar.Search())
                    .Editable(editable => editable.Mode(GridEditMode.InLine))
                    .Sortable()
                    .Scrollable()
                    .Reorderable(r => r.Columns(true))
                    .Resizable(r => r.Columns(true))
                    .Pageable(pageable => pageable
                    .Refresh(true)
                    .PageSizes(true)
                    .ButtonCount(10))
                    .Excel(excel => excel
                    .FileName("NhanVien.xlsx")
                    .Filterable(true)
                    .ProxyURL(Url.Action("ExportExcel", "CauHinh")))
                    .Pdf(pdf => pdf
                    .AllPages()
                    .AvoidLinks()
                    .PaperSize("A4")
                    .Margin("2cm", "1cm", "1cm", "1cm")
                    .Landscape()
                    .RepeatHeaders()
                    .FileName("NhanVien.pdf"))
                    .Search(search=> {
                        search.Field(f => f.Code);
                        search.Field(f => f.Name);
                        search.Field(f => f.Note);
                    })
                    .DataSource(dataSource => dataSource
                    .Custom()
                    .PageSize(1000)
                    .Schema(s => {
                        s.Model(m =>
                        {
                            m.Id(t => t.Id);
                            m.Field(t => t.Code).Editable(false);
                        });
                    })
                    .Transport(t => {
                        t.Read("GetByEntity", "Category", new { Entity = ViewData["Entity"]});
                        t.Destroy("Delete", "Category");
                        t.Create("Create", "Category");
                        t.Update("Update", "Category");
                    })))
                </div>
            </div>
        </div>
    </div>
</section>
<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<Category>()
     .Name("CategoryDetail_#=Code#")
     .Columns(columns =>
     {
         columns.Bound(t => t.Code).Title("Mã quản lý").Width(150);
         columns.Bound(t => t.SubCode).Title("Mã phụ").Width(150);
         columns.Bound(t => t.Name).Title("Tên hiển thị").Width(250);
         columns.Bound(t => t.Note).Title("Ghi chú").Width(200);
     })
     .ToolBar(toolBar => toolBar.Create().Text("&nbsp;").IconClass("fas fa-plus").HtmlAttributes(new { style = "border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
     .ToolBar(toolBar => toolBar.Search())
     .Editable(editable => editable.Mode(GridEditMode.InLine))
     .Sortable()
     .ClientDetailTemplateId("template")
     .Scrollable()
     .Reorderable(r => r.Columns(true))
     .Resizable(r => r.Columns(true))
     .Pageable(pageable => pageable
     .Refresh(true)
     .PageSizes(true)
     .ButtonCount(10))
     .Excel(excel => excel
     .FileName("NhanVien.xlsx")
     .Filterable(true)
     .ProxyURL(Url.Action("ExportExcel", "CauHinh")))
     .Pdf(pdf => pdf
     .AllPages()
     .AvoidLinks()
     .PaperSize("A4")
     .Margin("2cm", "1cm", "1cm", "1cm")
     .Landscape()
     .RepeatHeaders()
     .FileName("NhanVien.pdf"))
     .Search(search=> {
         search.Field(f => f.Code);
         search.Field(f => f.Name);
         search.Field(f => f.Note);
     })
     .DataSource(dataSource => dataSource
     .Custom()
     .Schema(s =>
     {
         s.Model(m =>
         {
             m.Id(t => t.Id);
             m.Field(t => t.Code).Editable(false);
         });
     })
     .PageSize(1000)
     .Transport(t => {
         t.Read("GetByParentCode", "Category", new { ParentCode = "#=Code#" });
         t.Destroy("Delete", "Category");
         t.Create("Create", "Category");
         t.Update("Update", "Category", new { ParentCode = "#=Code#" });
     })).ToClientTemplate())
</script>
<script>
    function dataBound() {
        this.expandRow(this.tbody.find("tr.k-master-row").first());
    }
</script>



    